@using System.Globalization
@model List<AIS.Models.PaymentInfo>
    @{
        ViewBag.Title = "Index";
        Layout = "~/Views/Shared/_Layout.cshtml";

        var periods = new List<SelectListItem>();
        for (var i = 2015; i < 2021; i++)
        {
            for (var j = 1; j < 5; j++)
            {
                periods.Add(item: new SelectListItem() { Text = String.Format("{0} квартал {1} год", j, i), Value = String.Format("{0}-{1}",i,j)});
            }
        }
        periods[0].Selected = true;
    }
    @section scripts
    {
        <script>
            jQuery(function ($) {
                $("#info").validate();
                var count =  @Html.Raw((Model.Count-1) + ";")
                @for (var i = 0; i < Model.Count; i++)
                {
                    if (Model[i].IsUse)
                    {
                        @Html.Raw("createRules(" + i + ");")
                    }
                }
                @if (ViewBag.Errors != null)
                {
                    @Html.Raw("$('#info').valid();")
                }
                $('#info').submit(function (e) {
                    if (!$("#info").valid()) {
                        e.preventDefault();
                    }
                });
                $("#addform").click(function() {
                    if (count == 2) {
                        console.log("err max");
                    } else {
                        count++;
                        addForm(count);
                        $("#remform").attr('disabled', false);
                    }
                    if (count == 2) {
                        $("#addform").attr('disabled', true);
                    }
                    console.log(count);
                });

                $("#remform").click(function() {
                    if (count == 0) {
                        console.log("err min");
                    } else {
                        remForm(count);
                        count--;
                        $("#addform").attr('disabled', false);
                    }
                    if (count == 0) {
                        $("#remform").attr('disabled', true);
                    }
                    console.log(count);
                });
            });
        </script>
    }
<form class="form-horizontal" id="info" action="@Url.Action("Index", "Payment")" method="post">
    @if (ViewBag.File != null)
    {
        @Html.Partial("Success")
    }
    @if (ViewBag.Errors != null)
    {
        @Html.Partial("Failed")
    }    
    @for (var i = 0; i < Model.Count; i++)
    {
        if (Model[i].IsUse)
        {
            <div id="@String.Format("form{0}",i)">
                <div class="form-group">
                    @Html.LabelFor(pi => pi[i].FidINN, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.EditorFor(pi => pi[i].FidINN, new { htmlAttributes = new { @class = "form-control", placeholder = "ИНН" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(pi => pi[i].FidAdress, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.EditorFor(pi => pi[i].FidAdress, new { htmlAttributes = new { @maxlength = "100", @class = "form-control", placeholder = "Адрес" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(pi => pi[i].FidArea, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.EditorFor(pi => pi[i].FidArea, new { htmlAttributes = new { @class = "form-control", @placeholder = "Площадь" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(pi => pi[i].FidSum, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.EditorFor(pi => pi[i].FidSum, new { htmlAttributes = new { @class = "form-control", @placeholder = "Сумма" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(pi => pi[i].FidPeriods, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.DropDownListFor(pi => pi[i].FidPeriods, @periods, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(pi => pi[i].FidDate, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.EditorFor(pi => pi[i].FidDate, new { htmlAttributes = new { @class = "form-control datepicker", @placeholder = "Дата" } })
                    </div>
                </div>
                @Html.HiddenFor(pi => pi[i].IsUse);
            </div>
        }
    }
    <div class="form-group">
        <div class="col-sm-offset-4 col-sm-2">
            <button type="submit" class="btn btn-default">Отправить</button>
        </div>
        <div class="col-sm-offset-3 col-sm-3">
            <div class="btn-group pull-right" role="group">
                <button type="button" id="remform" class="btn btn-danger" @Html.Raw((@Model.Count == 1) ? "disabled" : "")>Удалить</button>
                <button type="button" id="addform" class="btn btn-success" @Html.Raw((@Model.Count == 3) ? "disabled" : "")>Добавить</button>
            </div>
        </div>
    </div>
</form>
    